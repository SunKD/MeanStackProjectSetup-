{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/pagenotfound/pagenotfound.component.css","webpack:///./src/app/pagenotfound/pagenotfound.component.html","webpack:///./src/app/pagenotfound/pagenotfound.component.ts","webpack:///./src/app/quote-new/quote-new.component.css","webpack:///./src/app/quote-new/quote-new.component.html","webpack:///./src/app/quote-new/quote-new.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { QuoteNewComponent } from './quote-new/quote-new.component';\n\n\nconst routes: Routes = [\n  { path: 'new', component: NewComponent },\n  { path: 'view/:id', component: ViewComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'newquote/:id', component: QuoteNewComponent },\n  // use a colon and parameter name to include a parameter in the url\n  // redirect to /alpha if there is nothing in the url\n  { path: '', pathMatch: 'full', component: ListComponent },\n  // the ** will catch anything that did not match any of the above routes\n  { path: '**', component: ListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\r\\n    margin-top: 20px;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  authors;\n  newAuthor: any;\n  editAuthor;\n  title = 'Quote Ranks';\n  constructor(private _httpService: HttpService) { \n    // this.thirdtask = {title: \"\"} //when you dont want to use the *ngif\n  }\n  ngOnInit() {\n    this.newAuthor = {name: \"\"};\n    this.getAllAuthors();\n  }\n\n  getAllAuthors(){\n    let authors = this._httpService.getAuthors().subscribe(data=>{\n      console.log(\"get all author\");\n      console.log(data);\n      this.authors = data;\n    });\n\n  }\n\n  edit(id){\n    let edit = this._httpService.getAuthor(id).subscribe(data=>{\n      this.editAuthor = data;\n    })\n  }\n\n  delete(id){\n    let deleteAuthor = this._httpService.deleteAuthor(id).subscribe(data=>{\n      console.log(data);\n    });\n    this.getAllAuthors()\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';//\nimport { HttpService } from './http.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { QuoteNewComponent } from './quote-new/quote-new.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    EditComponent,\n    PagenotfoundComponent,\n    ListComponent,\n    ViewComponent,\n    QuoteNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".box{\\r\\n    border: 1px solid grey;\\r\\n    padding: 40px;\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form{\\r\\n    margin-top: 30px;\\r\\n}\"","module.exports = \"<!-- <div class=\\\"row\\\">\\n  <a [routerLink]=\\\"['/']\\\">Home</a>\\n  \\n</div>\\n<div *ngIf=\\\"editAuthor\\\">\\n    <form (submit) = \\\"onSubmit(editAuthor._id)\\\">\\n        <label>Name:</label>\\n        <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"editAuthor.name\\\">\\n        <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-info\\\" >Cancel</button>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" value=\\\"submit\\\">\\n      </form>\\n</div> -->\\n\\n\\n<!-- {{message}} -->\\n\\n<div class=\\\"row text-right\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success\\\">Home</a>\\n  </div>\\n</div>\\n<div *ngIf=\\\"editAuthor\\\">\\n  <h3>Edit Author: </h3>\\n  <div class=\\\"row form\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"box text-center\\\">\\n        <form (submit)=\\\"onSubmit(editAuthor._id)\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 text-left\\\">\\n              <label>Name:</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"name\\\" [(ngModel)]=\\\"editAuthor.name\\\" #name=\\\"ngModel\\\" \\n                class=\\\"form-control\\\">\\n              <span [hidden]=\\\"!errors.name || name.valid\\\" class=\\\"text-danger\\\">*{{errors.name.message}}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row buttons\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-danger form-control\\\">Cancel</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <input type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" value=\\\"submit\\\">\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  id: any;\n  editAuthor;\n  thisAuthor;\n  message = \"\";\n  errors = { name: \"\" };\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.id = params['id']));\n    this.getEditAuthor(this.id);\n    this.editAuthor = { name: \"\" };\n  }\n\n  getEditAuthor(id) {\n    let editing = this._httpService.getAuthor(this.id);\n    editing.subscribe(data => {\n      this.editAuthor = data['data'];\n      console.log(data);\n    })\n    // this._httpService.getAuthor(id).subscribe(data=>{\n    //   this.editAuthor = data;\n    // })\n  }\n\n  onSubmit(id) {\n    console.log(this.editAuthor)\n    let update = this._httpService.updateAuthor(this.editAuthor, id);\n    update.subscribe(data => {\n      console.log(\"submited form\")\n      console.log(data);\n      this.message = data[\"message\"];\n      if (data['message'] === \"Success\") {\n        this.message = this.editAuthor.name + \"added updated!\";\n        this._router.navigate(['/']);\n      } else {\n        if (data['error'].errors['name']) {\n          this.errors.name = data['error'].errors['name'];\n        }\n      }\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  \n  constructor(private _http: HttpClient) { \n    this.getAuthors();\n  }\n\n  getAuthors(){\n    return this._http.get('/authors');\n  }\n\n  getAuthor(id: String) {\n    return this._http.get('/authors/' + id);\n  }\n\n  voteQuote(id: String,  quote){\n    console.log(id)\n    console.log(quote)\n    return this._http.post('/quotes/'+ id, quote);\n  }\n\n  addAuthor(newAuthor) {\n    return this._http.post('/authors', newAuthor);\n  }\n\n  updateAuthor(updateInfo, id: String) {\n    return this._http.put('/authors/' + id, updateInfo);\n  }\n\n  deleteAuthor(id: String) {\n    return this._http.delete('/authors/' + id);\n  }\n\n  addNewQuote(id: String, newQuote){\n    console.log(id);\n    console.log(newQuote)\n    return this._http.post('/authors/' + id, newQuote);\n  }\n\n  deleteQuote(id: String, delquote:String) {\n    console.log(delquote, \"this should be quote id\")\n    console.log(id)\n    return this._http.delete('/quotes/' + id +\"/\"+ delquote);\n  }\n\n}\n","module.exports = \"h5{\\r\\n    margin-top: 30px;\\r\\n    color: purple;\\r\\n}\"","module.exports = \"<div class=\\\"row text-right\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <u>\\n      <button [routerLink]=\\\"['new']\\\" class=\\\"btn btn-outline-success\\\">Add a quotable author</button>\\n    </u>\\n  </div>\\n</div>\\n<h5>We have quoted by: </h5>\\n\\n<table class=\\\"text-center table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>Author</th>\\n      <th>Actions available</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let author of authors\\\">\\n      <td>{{author.name}}</td>\\n      <td>\\n        <button [routerLink]=\\\"['/view/', author._id]\\\" class=\\\"btn btn-primary\\\">View Quotes</button>\\n        <!-- <button (click)=\\\"delete(author._id)\\\">Delete</button> -->\\n        <button [routerLink]=\\\"['/edit/', author._id]\\\" class=\\\"btn btn-warning\\\">Edit</button>\\n        <button (click)=\\\"delete(quote._id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  authors: any;\n  newAuthor: any;\n  editAuthor;\n  title = 'Favorite authors';\n  constructor(private _httpService: HttpService) { \n    // this.thirdtask = {title: \"\"} //when you dont want to use the *ngif\n  }\n  ngOnInit() {\n    this.newAuthor = {name: \"\"};\n    this.getAllAuthors();\n  }\n\n  getAllAuthors(){\n    let authors = this._httpService.getAuthors().subscribe(data=>{\n      console.log(\"get all author\");\n      console.log(data);\n      this.authors = data['data'];\n    });\n\n  }\n\n  edit(id){\n    let edit = this._httpService.getAuthor(id).subscribe(data=>{\n      this.editAuthor = data;\n    })\n  }\n\n  delete(id){\n    let deleteAuthor = this._httpService.deleteAuthor(id).subscribe(data=>{\n      console.log(data);\n    });\n    this.getAllAuthors()\n  }\n\n}\n","module.exports = \".box{\\r\\n    border: 1px solid grey;\\r\\n    padding: 40px;\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form{\\r\\n    margin-top: 30px;\\r\\n}\"","module.exports = \"<!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div> -->\\n<div class=\\\"row text-right\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success\\\">Home</a>\\n  </div>\\n</div>\\n<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h3>Add new Author: </h3>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <span [hidden]=\\\"!errors.name\\\" class=\\\"text-danger\\\">*{{errors.name.message}}</span>\\n</div>\\n<div class=\\\"row form\\\">\\n  <div class=\\\"col-md-4\\\"></div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"box text-center\\\">\\n      <form (submit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12 text-left\\\">\\n            <label>Name:</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"newauthor.name\\\" [(ngModel)]=\\\"newauthor.name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"newauthor.name\\\"\\n              class=\\\"form-control\\\">\\n            <span [hidden]=\\\"!errors.name || name.valid\\\" class=\\\"text-danger\\\">*{{errors.name.message}}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">{{ name.errors | json }} {{ name.valid | json }}</div>\\n        </div>\\n        <div class=\\\"row buttons\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-danger form-control\\\">Cancel</button>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n\\n            <input type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" [disabled]=\\\"!name.valid\\\" value=\\\"submit\\\">\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\"></div>\\n</div>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newauthor;\n  message = \"\";\n  errors = { name: \"\" } ;\n  \n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this.newauthor= {name: \"\"};\n  }\n\n  onSubmit(){\n    let addAuthor = this._httpService.addAuthor(this.newauthor).subscribe(data=>{\n      console.log(data);\n      console.log(\"New Author added\");\n      console.log(\"This is the message from data\", data[\"message\"]);\n      this.message = data[\"message\"];\n      if(data['message'] === \"Success\"){\n        this.message = this.newauthor.name + \"added successfully!\";\n        this._router.navigate(['/']);\n      }else{\n        if (data['error'].errors['name']) {\n          console.log(\"print this when error\" ,data['error'])\n          this.errors.name = data['error'].errors['name'];\n        }\n      }\n      // if (data['message'] !== 'error') {\n      //   this._router.navigate(['/authors']);\n      // } else {\n      //   this.errors = data['errors']['errors']['name']['message'];\n      //   console.log(data['errors']['errors']['name']['message']);\n      // }\n    })\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n    We're sorry, but we could not find the author you are looking for. Would you like to add this author to our database?\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.box{\\r\\n    border: 1px solid grey;\\r\\n    padding: 40px;\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form{\\r\\n    margin-top: 30px;\\r\\n}\"","module.exports = \"<!-- <h3>Add new Author: </h3> -->\\n<!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div>\\n<a [routerLink]=\\\"['/']\\\">Home</a>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"box text-center\\\">\\n      <form (submit)=\\\"onQuoteSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <label>Quote:</label>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <input type=\\\"text\\\" name=\\\"newQuote.quote\\\" [(ngModel)]=\\\"newQuote.quote\\\">\\n        </div>\\n        <div class=\\\"row\\\">\\n          <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-info\\\">Cancel</button>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" value=\\\"submit\\\">\\n        </div>\\n\\n      </form>\\n    </div>\\n\\n  </div>\\n\\n</div> -->\\n\\n\\n<div class=\\\"row text-right\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success\\\">Home</a>\\n  </div>\\n</div>\\n<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h3>Add new Quote: </h3>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <span [hidden]=\\\"!errors.quote\\\" class=\\\"text-danger\\\">*{{errors.quote.message}}</span>\\n</div>\\n<div class=\\\"row form\\\">\\n  <div class=\\\"col-md-4\\\"></div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"box text-center\\\">\\n      <form (submit)=\\\"onQuoteSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12 text-left\\\">\\n            <label>Quote:</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"newQuote.quote\\\" [(ngModel)]=\\\"newQuote.quote\\\" #quote=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            <span [hidden]=\\\"!errors.quote || quote.valid\\\" class=\\\"text-danger\\\">*{{errors.quote.message}}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">{{ quote.errors | json }} {{ quote.valid | json }}</div>\\n        <div class=\\\"row buttons\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-danger form-control\\\">Cancel</button>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <input type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" [disabled]=\\\"!quote.valid\\\" value=\\\"submit\\\">\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-quote-new',\n  templateUrl: './quote-new.component.html',\n  styleUrls: ['./quote-new.component.css']\n})\nexport class QuoteNewComponent implements OnInit {\n  id;\n  newQuote: any;\n  thisAuthor;\n  quoteaddAuthor;\n  message = \"\";\n  errors = { quote: \"\" };\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.id = params['id']));\n    console.log(this.id);\n    console.log(\"Please printTTTT!\")\n    this.newQuote = { quote: \"\"}\n  }\n\n  onQuoteSubmit(){\n    console.log(this.id);\n    let nQuote = this._httpService.addNewQuote(this.id, this.newQuote).subscribe(data=>{\n      console.log(\"you are adding new quote\" + data);\n      this.newQuote = data['data'];\n      this.message = data[\"message\"];\n      if(data['message'] === \"Success\"){\n        this.message = this.newQuote.quote + \"added successfully!\";\n        this._router.navigate(['/view']);\n      }else{\n        if (data['error'].errors['quote']) {\n          this.errors.quote = data['error'].errors['quote'];\n        }\n      }\n    })\n    this.newQuote = {quote: \"\"};\n  }\n\n\n  \n}\n","module.exports = \"h3{\\r\\n    color: purple;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"thisAuthor\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\"></div>\\n    <div class=\\\"col-md-2\\\">\\n      <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success form-control\\\">Home</button>\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <a [routerLink]=\\\"['/newquote/', thisAuthor._id]\\\" class=\\\"btn btn-outline-success form-control\\\">Add a quote</a>\\n    </div>\\n    <div class=\\\"col-md-4\\\"></div>\\n  </div>\\n\\n  <h3>Quotes by {{thisAuthor.name}} </h3>\\n  <table class=\\\"table table-strpied text-center\\\">\\n    <thead>\\n      <tr>\\n        <th>Quote</th>\\n        <th>Votes</th>\\n        <th>Actions avaliable</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let quote of thisAuthor.quotes\\\">\\n          <td>{{quote.quote}}</td>\\n          <td>{{quote.vote}}</td>\\n          <td>\\n            <button (click)=\\\"voteUp(quote._id)\\\" class=\\\"btn btn-success\\\">Vote Up</button>\\n            <button (click)=\\\"voteDown(quote._id)\\\" class=\\\"btn btn-warning\\\">Vote Down</button>\\n            <button (click)=\\\"delete(quote._id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </td>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  id;\n  thisAuthor;\n  thisVote;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.id = params['id']));\n    let author = this._httpService.getAuthor(this.id).subscribe(data => {\n      console.log(data);\n      this.thisAuthor = data['data'];\n      // this.thisVote = data.quote\n      // this.thisVote = data.quotes.\n    })\n  }\n\n  voteUp(quoteId) {\n    console.log(quoteId)\n    console.log(\"hi!\")\n    let voted = this._httpService.voteQuote(this.thisAuthor._id,\n      { \"id\": quoteId, \"voteVal\": 1 }).subscribe(data => {\n        console.log(\"got intot this function\");\n        this.thisAuthor = data;\n      });\n\n  }\n\n  voteDown(quoteId) {\n    console.log(quoteId)\n    console.log(\"hi!\")\n    let voted = this._httpService.voteQuote(this.thisAuthor._id,\n      { \"id\": quoteId, \"voteVal\": -1 }).subscribe(data => {\n        console.log(\"got intot this function\");\n        this.thisAuthor = data;\n      });\n\n  }\n  \n  delete(quoteId:String) {\n    console.log(quoteId + \"from view\")\n    let deletequote = this._httpService.deleteQuote(this.thisAuthor._id,\n      quoteId )\n      .subscribe(data => {\n        console.log(\"got intot this function\");\n        this.thisAuthor = data;\n      });\n    \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}